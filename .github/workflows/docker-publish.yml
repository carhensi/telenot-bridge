name: Build and Publish Docker Image

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    build-and-publish:
        runs-on: ubuntu-latest

        steps:
            - name: Check out the repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: Cache Yarn dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/yarn
                      node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Setup configuration
              run: mv src/config-example src/config

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Run tests
              run: yarn test

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_PAT }}

            - name: Build and push Docker image to GHCR
              if: success()
              uses: docker/build-push-action@v6
              with:
                  cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
                  cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository }}:latest
                      ghcr.io/${{ github.repository }}:${{ github.ref_name }}

            - name: Log out of GitHub Container Registry
              run: docker logout ghcr.io

            - name: Create GitHub Release
              if: success()
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ github.ref_name }}
                  name: Release ${{ github.ref_name }}
                  body: |
                      Version ${{ github.ref_name }} of the Docker image is now available.
                      For details, see the [release notes](https://github.com/carhensi/telenot-bridge/releases/tag/${{ github.ref_name }}).
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
